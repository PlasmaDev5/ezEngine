# Variable 'unityfiles' was defined in the Variables tab
trigger:
  branches:
    include:
    - dev
resources:
  repositories:
  - repository: self
    type: git
    ref: dev
jobs:
- job: StartVM
  displayName: StartVM
  pool:
    vmImage: 'windows-2019'
  steps:
  - checkout: none
  - task: AzureKeyVault@1
    displayName: 'Azure Key Vault: ezKeys'
    inputs:
      ConnectedServiceName: a416236e-0672-4024-bca3-853beb235e5e
      KeyVaultName: ezKeys
      SecretsFilter: AzureFunctionKey
  - task: PowerShell@2
    displayName: StartVM
    continueOnError: true
    inputs:
      targetType: inline
      script: Invoke-RestMethod -Uri "https://ezengineci.azurewebsites.net/api/StartVM?code=$(AzureFunctionKey)&vmname=Ubuntu-22.04"
- job: Job_1
  displayName: Linux-x64
  pool:
    name: Default
    demands:
    - Agent.OS -equals Linux
  steps:
  - checkout: self
    submodules: true
    lfs: true
  - task: PowerShell@2
    displayName: Check force clean
    inputs:
      targetType: inline
      script: |
        $pathA = Join-Path $(System.DefaultWorkingDirectory) "gitClean.txt"
        $pathB = Join-Path $(System.DefaultWorkingDirectory) "gitCleanCopy.txt"
        $clean = -not (Test-Path $pathB) -or (compare-object (get-content $pathA) (get-content $pathB))
        if ($clean)
        {
            Write-Host "Cleaning repo!"
            git clean -dfx
            Copy-Item -Path $pathA -Destination $pathB
        }
  - task: Bash@3
    displayName: Apt-Get
    inputs:
      targetType: inline
      script: |
        sudo apt-get update
        sudo apt-get install -y cmake uuid-dev gcc-12 g++-12 libx11-dev build-essential qt6-base-dev libqt6svg6-dev qt6-base-private-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev xvfb lightdm libtinfo5 vulkan-tools
        # sudo add-apt-repository ppa:kisak/kisak-mesa -y 
        # sudo apt-get install -y mesa-vulkan-drivers libgl1-mesa-dev
  - task: Bash@3
    displayName: Info
    inputs:
      targetType: inline
      script: >-
        lscpu | grep -E '^Thread|^Core|^Socket|^CPU\('

        git config --list

        dpkg --list | grep compiler
  - task: CMake@1
    displayName: CMake
    inputs:
      cmakeArgs: -DCMAKE_BUILD_TYPE=Dev -DCMAKE_CXX_COMPILER=g++-12 -DCMAKE_C_COMPILER=gcc-12 -DEZ_ENABLE_FOLDER_UNITY_FILES=$(unityfiles) -DEZ_BUILD_EXPERIMENTAL_VULKAN=ON -DEZ_EXPERIMENTAL_EDITOR_ON_LINUX=ON -G "Unix Makefiles" ../
  - task: Bash@3
    displayName: Make
    inputs:
      targetType: inline
      script: make -C ./build -j$(nproc)
  - task: PowerShell@2
    displayName: PowerShell Script
    inputs:
      targetType: inline
      script: Write-Host "##vso[task.setvariable variable=task.MSBuild.status]success"
  - task: Bash@3
    displayName: ToolsFoundationTest
    condition: eq(variables['task.MSBuild.status'], 'success')
    inputs:
      targetType: inline
      script: ./Output/Bin/LinuxMakeGccDev64/ToolsFoundationTest -nosave -nogui -all -outputDir $(Build.ArtifactStagingDirectory)/ToolsFoundationTest
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: drop'
    condition: succeededOrFailed()
...
